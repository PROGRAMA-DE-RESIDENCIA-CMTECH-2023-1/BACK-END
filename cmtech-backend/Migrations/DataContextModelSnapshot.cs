// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cmtech_backend.Data.Context;

#nullable disable

namespace cmtech_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("Org_id")
                        .HasColumnType("integer")
                        .HasColumnName("organizacao_id");

                    b.HasKey("Id");

                    b.HasIndex("Org_id");

                    b.ToTable("departamento");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("grupo");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Org", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Group_id")
                        .HasColumnType("integer")
                        .HasColumnName("grupo_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("Segment_id")
                        .HasColumnType("integer")
                        .HasColumnName("segmento_id");

                    b.HasKey("Id");

                    b.HasIndex("Group_id");

                    b.HasIndex("Segment_id");

                    b.ToTable("organizacao");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("segmento");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<int?>("Department_id")
                        .HasColumnType("integer")
                        .HasColumnName("departamento_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int?>("OrgId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<int>("Profile_id")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.HasKey("Id");

                    b.HasIndex("Department_id");

                    b.HasIndex("OrgId");

                    b.HasIndex("Profile_id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.UserOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasColumnName("organizacao_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("usuario_organizacao");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Department", b =>
                {
                    b.HasOne("cmtech_backend.Models.Entitys.Org", "Org")
                        .WithMany("Departments")
                        .HasForeignKey("Org_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Org", b =>
                {
                    b.HasOne("cmtech_backend.Models.Entitys.Group", "Group")
                        .WithMany("Orgs")
                        .HasForeignKey("Group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cmtech_backend.Models.Entitys.Segment", "Segment")
                        .WithMany("Orgs")
                        .HasForeignKey("Segment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.User", b =>
                {
                    b.HasOne("cmtech_backend.Models.Entitys.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("Department_id");

                    b.HasOne("cmtech_backend.Models.Entitys.Org", null)
                        .WithMany("Users")
                        .HasForeignKey("OrgId");

                    b.HasOne("cmtech_backend.Models.Entitys.Profile", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("Profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.UserOrganization", b =>
                {
                    b.HasOne("cmtech_backend.Models.Entitys.Org", "Org")
                        .WithMany("UserOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cmtech_backend.Models.Entitys.User", "User")
                        .WithMany("UserOrganizations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Group", b =>
                {
                    b.Navigation("Orgs");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Org", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("UserOrganizations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Profile", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.Segment", b =>
                {
                    b.Navigation("Orgs");
                });

            modelBuilder.Entity("cmtech_backend.Models.Entitys.User", b =>
                {
                    b.Navigation("UserOrganizations");
                });
#pragma warning restore 612, 618
        }
    }
}
